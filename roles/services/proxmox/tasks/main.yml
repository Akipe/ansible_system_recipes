---

- name: Add user
  ansible.builtin.include_tasks:
    file: add_user.yml
  vars:
    user_to_create: "{{ item }}"
  loop: "{{ users_create }}"
  when: users_create is defined

- name: Add no-subscription repository
  ansible.builtin.include_tasks:
    file: set_no_subscription_repository.yml

- name: Remove unused Proxmox packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: "{{apt_unattended_cache_valid_time}}"
    name:
      - os-prober
    state: absent

- name: Remove blacklist Intel Microcode
  ansible.builtin.include_tasks:
    file: remove_blacklist_intel_microcode.yml

- name: Update bootloader configuration
  ansible.builtin.include_tasks:
    file: update_grub_config.yml

# - name: Install Proxmox VE and related packages
#   ansible.builtin.apt:
#     update_cache: true
#     cache_valid_time: "{{apt_unattended_cache_valid_time}}"
#     name:
#       - proxmox-ve
#       - open-iscsi
#       - ksm-control-daemon
#       - ifupdown2
#     state: present

# - name: Install dependencies for Ansible
#   ansible.builtin.pip:
#     name:
#       - requests
#       - proxmoxer
#     state: present

# - name: Add kernel config for Proxmox
#   ansible.builtin.template:
#     src: "sysctl.d/{{ item }}.conf.j2"
#     dest: "/etc/sysctl.d/{{ item }}.conf"
#     owner: root
#     group: root
#     mode: u+rw,g+r,o+r
#   notify: Reload kernel config
#   loop:
#     - pve

- name: Active automatic update of LXC templates
  ansible.builtin.systemd:
    name: pve-daily-update.timer
    enabled: true
    state: started

# - name: Create directory for store public key
#   ansible.builtin.file:
#     path: /etc/pub_keys
#     state: directory
#     owner: root
#     group: www-data
#     mode: u+rwx,g+rx,o+rx

# - name: Add akpKey public key
#   ansible.builtin.copy:
#     src: pubkey/akpkey/ssh.public.key
#     dest: /etc/pub_keys/akpkey.ssh.pub

# - name: Allow LXC containers to mount NFS
#   ansible.builtin.template:
#     src: apparmor.d/lxc-default-with-nfs.j2
#     dest: /etc/apparmor.d/lxc/lxc-default-with-nfs
#     owner: root
#     group: root
#     mode: u+rw,g+r,o+r
#   notify: Restart apparmor

# - name: Include web interface proxy tasks
#   ansible.builtin.include_tasks: web_interface_proxy.yml

# - name: setup IPV4 forwarding for NAT
#   ansible.builtin.lineinfile: "state=present dest=/etc/sysctl.conf
#   regexp='^#?net.ipv4.ip_forward'
#   line=net.ipv4.ip_forward=1"
#   tags:
#     - nat

# - name: Configure Proxmox groups
#   proxmox_group:
#     name: "{{ item.name }}"
#     state: "{{ item.state | default('present') }}"
#     comment: "{{ item.comment | default(omit) }}"
#   with_items: "{{ pve_groups }}"
#   when: "not pve_cluster_enabled or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

# - name: Configure Proxmox user accounts
#   proxmox_user:
#     name: "{{ item.name }}"
#     state: "{{ item.state | default('present') }}"
#     enable: "{{ item.enable | default(omit) }}"
#     groups: "{{ item.groups | default([]) }}"
#     comment: "{{ item.comment | default(omit) }}"
#     email: "{{ item.email | default(omit) }}"
#     firstname: "{{ item.firstname | default(omit) }}"
#     lastname: "{{ item.lastname | default(omit) }}"
#     password: "{{ item.password | default(omit) }}"
#     expire: "{{ item.expire | default(omit) }}"
#   with_items: "{{ pve_users }}"
#   when: "not pve_cluster_enabled | bool or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

# - name: Configure Proxmox ACLs
#   proxmox_acl:
#     path: "{{ item.path }}"
#     roles: "{{ item.roles }}"
#     state: "{{ item.state | default('present') }}"
#     groups: "{{ item.groups | default([]) }}"
#     users: "{{ item.users | default([]) }}"
#   with_items: "{{ pve_acls }}"
#   when: "not pve_cluster_enabled | bool or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

# - block:
#   - name: Remove automatically installed PVE Enterprise repo configuration
#     ansible.builtin.apt_repository:
#       repo: "{{ item }}"
#       filename: pve-enterprise
#       state: absent
#     with_items:
#       - "deb https://enterprise.proxmox.com/debian {{ ansible_distribution_release }} pve-enterprise"
#       - "deb https://enterprise.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-enterprise"

#   - name: Remove subscription check wrapper function in web UI
#     patch:
#       src: "00_remove_checked_command_{{ ansible_distribution_release }}.patch"
#       basedir: /
#       strip: 1
#       backup: yes
#     when:
#       - "pve_remove_subscription_warning | bool"
#   when:
#     - "'pve-no-subscription' in pve_repository_line"


# - name: Configure Proxmox ACLs
#   proxmox_acl:
#     path: "{{ item.path }}"
#     roles: "{{ item.roles }}"
#     state: "{{ item.state | default('present') }}"
#     groups: "{{ item.groups | default([]) }}"
#     users: "{{ item.users | default([]) }}"
#   with_items: "{{ pve_acls }}"
#   when: "not pve_cluster_enabled | bool or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

# - name: Configure Proxmox Storage
#   proxmox_storage:
#     name: "{{ item.name }}"
#     type: "{{ item.type }}"
#     disable: "{{ item.disable | default(False) }}"
#     path: "{{ item.path | default(omit) }}"
#     content: "{{ item.content | default([]) }}"
#     nodes: "{{ item.nodes | default(omit) }}"
#     username: "{{ item.username | default(omit) }}"
#     pool: "{{ item.pool | default(omit) }}"
#     monhost: "{{ item.monhost | default(omit) }}"
#     maxfiles: "{{ item.maxfiles | default(omit) }}"
#     krbd: "{{ item.krbd | default(omit) }}"
#     state: "{{ item.state | default('present') }}"
#     server: "{{ item.server | default(omit) }}"
#     export: "{{ item.export | default(omit) }}"
#     options: "{{ item.options | default(omit) }}"
#     vgname: "{{ item.vgname | default(omit) }}"
#     thinpool: "{{ item.thinpool | default(omit) }}"
#   with_items: "{{ pve_storages }}"
#   when: "not pve_cluster_enabled | bool or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

# - name: Setup open-iscsi configuration
#   ansible.builtin.template:
#     src="{{ proxmox_isci_config_template }}"
#     dest="{{ proxmox_isci_config_path }}"
#   notify: open-iscsi restart

# - name: Modprobe some modules to enable firewall in containers
#   modprobe: name='{{ item }}'
#   with_items: '{{ proxmox_modules }}'
#   tags:
#     - after-reboot

# - name: Configure network interfaces (need reboot if changes)
#   ansible.builtin.template:
#     src:  "{{ proxmox_interfaces_template }}"
#     dest: "{{ proxmox_interfaces_file }}"
#   when: proxmox_interfaces_template | length
