---

- name: Load tasks for Fedora
  ansible.builtin.include_tasks: fedora/main.yml
  when: ansible_distribution == "Fedora"

- name: Load tasks for Archlinux
  ansible.builtin.include_tasks: archlinux/main.yml
  when: ansible_distribution == "Archlinux"

- name: Create GnuPG user directory
  become: yes
  become_user: "{{ user_name }}"
  ansible.builtin.file:
    path: "/home/{{ user_name }}/.gnupg"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: u+rwx,g-rwx,o-rwx

- name: Set GPG configuration
  become: yes
  become_user: "{{ user_name }}"
  ansible.builtin.template:
    src: user_gnupg/gpg.conf.j2
    dest: "/home/{{ user_name }}/.gnupg/gpg.conf"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: u+rw,g-rwx,o-rwx

- name: Set GPG agent configuration
  become: yes
  become_user: "{{ user_name }}"
  ansible.builtin.template:
    src: user_gnupg/gpg-agent.conf.j2
    dest: "/home/{{ user_name }}/.gnupg/gpg-agent.conf"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: u+rw,g-rwx,o-rwx

- name: Set configuration for SSH authentification for bash
  become: yes
  become_user: "{{ user_name }}"
  ansible.builtin.template:
    src: bash/gpg-agent.bash.j2
    dest: "/home/{{ user_name }}/.config/bash/conf.d/gpg-agent.bash"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: u+rw,g+r,o+r

- name: Set configuration for SSH authentification for fish
  become: yes
  become_user: "{{ user_name }}"
  ansible.builtin.template:
    src: fish/gpg-agent.fish.j2
    dest: "/home/{{ user_name }}/.config/fish/conf.d/gpg-agent.fish"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: u+rw,g+r,o+r

- name: Enable systemd unit pcscd
  become: true
  ansible.builtin.systemd:
    name: pcscd.socket
    enabled: true
    state: started

- name: Import multiple GPG key and set trust
  gpg_key:
    content: "{{ item.public_key_content }}"
    trust: "{{ item.trust_level }}"
  loop:
    "{{ gnupg_import_multiple_key }}"
  when: gnupg_import_multiple_key
