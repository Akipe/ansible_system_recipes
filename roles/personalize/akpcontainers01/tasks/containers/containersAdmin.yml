---

- name: Create containersAdmin volume for /data
  become: yes
  become_user: "{{ containerUser.name }}"
  docker_volume:
    name:   "{{ containersAdmin_volume_data_name }}"
    state:  present
    driver: local
    driver_options:
      type:   nfs4
      device: "{{ containersAdmin_volume_data_nfsPath }}"
      o:      "{{ containers_nfs_akpContainers01_options }}"

- name: Create containersAdmin container
  become:       yes
  become_user:  "{{ containerUser.name }}"
  docker_container:
    networks_cli_compatible: yes
    name:           "{{ containersAdmin_name }}"
    state:          started
    image:          "{{ containersAdmin_image }}"
    restart_policy: unless-stopped
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ containersAdmin_volume_data_name }}:/data"
    networks:
      - name: "{{ containersRouter_network_name }}"
    labels:
      traefik.enable:                                                 "true"
      traefik.http.routers.containersAdmin.entrypoints:               "http"
      traefik.http.routers.containersAdmin.rule:                      "Host(`{{ containersAdmin_url }}`)"
      traefik.http.routers.containersAdmin.middlewares:               "HttpsRedirection@file"
      traefik.http.routers.containersAdmin_secure.entrypoints:        "https"
      traefik.http.routers.containersAdmin_secure.tls:                "true"
      traefik.http.routers.containersAdmin_secure.rule:               "Host(`{{ containersAdmin_url }}`)"
      traefik.http.services.containersAdmin.loadbalancer.server.port: "9000"
    comparisons:
      env:      strict
      volumes:  allow_more_present
